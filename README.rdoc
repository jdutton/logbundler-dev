= logbundler

= DESCRIPTION:

Logbundler automates the creation of diagnostic archives for offline debug and analysis of a server/application.  A config file specifies what log files to gather and what commands to run and gather output from.

= OUTSTANDING QUESTIONS:

Should the spec have metadata to match the system type?  Useful for Avance.

= SPECFILE:

Logbundler reads spec files in JSON or YAML encoding, describing what files and command outputs to gather.  For example

<tt>
{
  "system": [
    { "shell": "rpm -qa", "timeout": "10s", "stdout": "rpms/rpm-qa.stdout", },
    { "shell": "dmidecode", "timeout": "5s", "stdout": "sys/dmidecode.out", },
    { "files": "/var/log/messages*", "filetype": "syslog" }
  ],
  "tomcat": [
    { "files": "/opt/tomcat/logs/catelina.log*", "filetype": "catelina-access" },
    { "shell": "service tomcat status", "timeout": "3s", "stdout": "tomcat/service.status" }
  ]
}
</tt>

= LINKS:

Source:

* http://github.com/jdutton/logbundler/tree/master

= LICENSE:

Author:: Jeff Dutton (<jeff.r.dutton@gmail.com>)
Copyright:: Copyright (c) 2012 Jeff Dutton
License:: Apache License, Version 2.0

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
